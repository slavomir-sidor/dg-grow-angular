{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {HttpClient} http : Angular HTTP Client\r\n     * @public\r\n     */\n    constructor(http) {\n      this.http = http;\n      console.log(\"ProductService constructor\");\n    }\n    /**\r\n     * Puts product to the sales local storage on browser runtime\r\n     *\r\n     * @public\r\n     */\n\n\n    putProduct(product) {\n      return new Promise((resolve, reject) => {\n        try {\n          this.getSales();\n          resolve(product);\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    /**\r\n     * Get Sales method is lazy lading data from the assets products potato_sales.json file only once,\r\n     * since this method as invoked.\r\n     */\n\n\n    getSales() {\n      return new Promise((resolve, reject) => {\n        if (typeof this.sales !== \"undefined\") {\n          resolve(this.sales);\n        } else {\n          this.http.get(\"./assets/products/potato_sales.json\").toPromise().then(data => {\n            this.setSales(data);\n            resolve(data);\n          }).catch(error => {\n            reject(error);\n          });\n        }\n      });\n    }\n\n    calculateSalesTotals(items) {\n      // Claculated columns declaration\n      let cols = []; // Total declaration\n\n      let total; // Claculated columns extraction as subheader of hardcoded \"Sales\" \n      // ~ pitty coulmn specification \"field\" of Sales column is missing in JSON,\n      // better to use, instead of kind of language message, column header,\n      // which should be changed\n\n      for (let i = 0; i < items.column.length; i++) {\n        if (items.column[i].header === \"Sales\") {\n          for (let j = 0; j < items.column[i].subHeaders.length; j++) {\n            cols.push(items.column[i].subHeaders[j].field);\n          }\n        } // Fix for missing field should be fixed in json source,\n        // but I fix it here, i leave it as a bug on mock API.\n        // The rendering by column is getting data by this field value \n\n\n        if (items.column[i].header === \"Total sales\") {\n          items.column[i].field = \"totalSales\";\n        }\n      } // Calculate for each row\n\n\n      for (let i = 0; i < items.data.length; i++) {\n        total = 0;\n        Object.keys(items.data[i]).filter(key => cols.includes(key)).reduce((obj, key) => {\n          obj[key] = items.data[i][key];\n          total += items.data[i][key];\n          return obj;\n        }, {});\n        items.data[i][\"totalSales\"] = total;\n      }\n\n      return items;\n    }\n    /**\r\n     *\r\n     */\n\n\n    setSales(items) {\n      this.sales = this.calculateSalesTotals(items);\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}